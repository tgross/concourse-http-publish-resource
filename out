#!/bin/bash
# implements the Concourse resource specification for 'out'
# to publish artifacts via HTTP PUT
set -eu

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# we have some multi-line JSON payloads to handle, so just
# drop them in temporary files that we make sure to clean up.
report=./.http-put-report
payload=./.http-publish-resource-request

cleanup() {
    rm -f "$payload"
    rm -f "$report"
}
trap cleanup EXIT

echo "working directory: $(pwd)"

# concourse request
cat > "$payload" <&0

# report our input payload with secrets redacted
echo "input payload: "
jq '. | .source.password |= "*******" | .source.username |= "*******"' < "$payload"

# optional params
datefmt=$(jq -r '.params.datefmt | select (.!=null)' < "$payload")
if [ -n "$datefmt" ]; then
    datefmt='+%Y%m%dT%H%MZ'
fi
BUILD_DATETIME=$(date -u $datefmt)
export BUILD_DATETIME

uploads_user=$(jq -r '.source.username' < "$payload")
uploads_password=$(jq -r '.source.password' < "$payload")
base_url=$(jq -r '.source.url' < "$payload" )
from_path=$(jq -r '.params.from' < "$payload")
to_path=$(jq -r '.params.to' < "$payload")
dryrun=$(jq -r '.params.dryrun | select (.!=null)' < "$payload")

url=$(echo "${base_url}/${to_path}" | envsubst)
checksum=$(sha256sum "$from_path" | awk -F' +' '{print $1}')

echo "file: $from_path"
echo "checksum: $checksum"
echo "uploading to: $url"

# allow testing without an actual upload
curl=curl
if [[ "$dryrun" == "true" ]]; then
    curl="echo curl"
fi

$curl --fail \
      -su "${uploads_user}:${uploads_password}" \
      --upload-file "$from_path" \
      "${url}"

cat > "$report" <<EOF
{
  "version": { "sha256": "$checksum" },
  "metadata": [
    { "name": "url", "value": "$url" },
    { "name": "build_job", "value": "$BUILD_JOB_NAME" },
    { "name": "build_name", "value": "$BUILD_NAME" },
    { "name": "build_id", "value": "$BUILD_ID" },
    { "name": "build_pipeline_name", "value": "$BUILD_PIPELINE_NAME" },
    { "name": "build_team_name", "value": "$BUILD_TEAM_NAME" },
    { "name": "atc_external_url", "value": "$ATC_EXTERNAL_URL" }
  ]
}
EOF

# send to both logs and the expected output
cat "$report"
cat "$report" >&3
